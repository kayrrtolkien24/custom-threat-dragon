{
  "summary": {
    "title": "Microservice Architecture Template",
    "description": "A template for a typical microservice architecture including API Gateway, Load Balancer, Microservices, Database, Message Queue, and External Services."
  },
  "detail": {
    "contributors": [],
    "diagrams": [
      {
        "id": "microservice-arch-1",
        "title": "Microservice Architecture",
        "diagramType": "Data Flow",
        "placeholder": false,
        "thumbnail": "",
        "version": "2.0",
        "description": "Standard microservice architecture with API Gateway pattern",
        "cells": [
          {
            "id": "client-app",
            "position": { "x": 100, "y": 50 },
            "size": { "width": 100, "height": 60 },
            "type": "tm.Actor",
            "name": "Client Application",
            "description": "Web or mobile client consuming the services",
            "outOfScope": false,
            "reasonOutOfScope": "",
            "hasOpenThreats": false,
            "threats": []
          },
          {
            "id": "load-balancer",
            "position": { "x": 300, "y": 50 },
            "size": { "width": 100, "height": 60 },
            "type": "tm.Process",
            "name": "Load Balancer",
            "description": "Distributes incoming traffic across multiple API Gateway instances",
            "outOfScope": false,
            "reasonOutOfScope": "",
            "hasOpenThreats": false,
            "threats": []
          },
          {
            "id": "api-gateway",
            "position": { "x": 500, "y": 50 },
            "size": { "width": 100, "height": 60 },
            "type": "tm.Process",
            "name": "API Gateway",
            "description": "Entry point for all client requests, handles routing, authentication, and rate limiting",
            "outOfScope": false,
            "reasonOutOfScope": "",
            "hasOpenThreats": false,
            "threats": []
          },
          {
            "id": "auth-service",
            "position": { "x": 300, "y": 200 },
            "size": { "width": 100, "height": 60 },
            "type": "tm.Process",
            "name": "Auth Service",
            "description": "Handles user authentication and authorization",
            "outOfScope": false,
            "reasonOutOfScope": "",
            "hasOpenThreats": false,
            "threats": []
          },
          {
            "id": "user-service",
            "position": { "x": 500, "y": 200 },
            "size": { "width": 100, "height": 60 },
            "type": "tm.Process",
            "name": "User Service",
            "description": "Manages user profiles and preferences",
            "outOfScope": false,
            "reasonOutOfScope": "",
            "hasOpenThreats": false,
            "threats": []
          },
          {
            "id": "product-service",
            "position": { "x": 700, "y": 200 },
            "size": { "width": 100, "height": 60 },
            "type": "tm.Process",
            "name": "Product Service",
            "description": "Handles product catalog and inventory",
            "outOfScope": false,
            "reasonOutOfScope": "",
            "hasOpenThreats": false,
            "threats": []
          },
          {
            "id": "message-queue",
            "position": { "x": 500, "y": 350 },
            "size": { "width": 100, "height": 60 },
            "type": "tm.Process",
            "name": "Message Queue",
            "description": "Asynchronous message broker for inter-service communication",
            "outOfScope": false,
            "reasonOutOfScope": "",
            "hasOpenThreats": false,
            "threats": []
          },
          {
            "id": "user-db",
            "position": { "x": 300, "y": 500 },
            "size": { "width": 100, "height": 60 },
            "type": "tm.Store",
            "name": "User Database",
            "description": "Stores user data and credentials",
            "outOfScope": false,
            "reasonOutOfScope": "",
            "hasOpenThreats": false,
            "threats": []
          },
          {
            "id": "product-db",
            "position": { "x": 700, "y": 500 },
            "size": { "width": 100, "height": 60 },
            "type": "tm.Store",
            "name": "Product Database",
            "description": "Stores product information and inventory data",
            "outOfScope": false,
            "reasonOutOfScope": "",
            "hasOpenThreats": false,
            "threats": []
          },
          {
            "id": "external-payment",
            "position": { "x": 900, "y": 200 },
            "size": { "width": 100, "height": 60 },
            "type": "tm.Process",
            "name": "Payment Service",
            "description": "External payment processing service",
            "outOfScope": true,
            "reasonOutOfScope": "Third-party service",
            "hasOpenThreats": false,
            "threats": []
          },
          {
            "id": "flow-1",
            "type": "tm.Flow",
            "name": "Client Request",
            "description": "HTTPS requests from client",
            "source": "client-app",
            "target": "load-balancer",
            "isEncrypted": true,
            "protocol": "HTTPS",
            "isPublicNetwork": true,
            "hasOpenThreats": false,
            "threats": []
          },
          {
            "id": "flow-2",
            "type": "tm.Flow",
            "name": "Load Balanced Traffic",
            "description": "Distributes traffic to API Gateway instances",
            "source": "load-balancer",
            "target": "api-gateway",
            "isEncrypted": true,
            "protocol": "HTTPS",
            "isPublicNetwork": false,
            "hasOpenThreats": false,
            "threats": []
          },
          {
            "id": "flow-3",
            "type": "tm.Flow",
            "name": "Authentication Request",
            "description": "API Gateway authenticates users",
            "source": "api-gateway",
            "target": "auth-service",
            "isEncrypted": true,
            "protocol": "HTTPS",
            "isPublicNetwork": false,
            "hasOpenThreats": false,
            "threats": []
          },
          {
            "id": "flow-4",
            "type": "tm.Flow",
            "name": "User Data Request",
            "description": "API Gateway forwards user requests",
            "source": "api-gateway",
            "target": "user-service",
            "isEncrypted": true,
            "protocol": "HTTPS",
            "isPublicNetwork": false,
            "hasOpenThreats": false,
            "threats": []
          },
          {
            "id": "flow-5",
            "type": "tm.Flow",
            "name": "Product Data Request",
            "description": "API Gateway forwards product requests",
            "source": "api-gateway",
            "target": "product-service",
            "isEncrypted": true,
            "protocol": "HTTPS",
            "isPublicNetwork": false,
            "hasOpenThreats": false,
            "threats": []
          },
          {
            "id": "flow-6",
            "type": "tm.Flow",
            "name": "User DB Access",
            "description": "User service reads/writes to user database",
            "source": "user-service",
            "target": "user-db",
            "isEncrypted": true,
            "protocol": "TLS",
            "isPublicNetwork": false,
            "hasOpenThreats": false,
            "threats": []
          },
          {
            "id": "flow-7",
            "type": "tm.Flow",
            "name": "Auth DB Access",
            "description": "Auth service reads/writes to user database",
            "source": "auth-service",
            "target": "user-db",
            "isEncrypted": true,
            "protocol": "TLS",
            "isPublicNetwork": false,
            "hasOpenThreats": false,
            "threats": []
          },
          {
            "id": "flow-8",
            "type": "tm.Flow",
            "name": "Product DB Access",
            "description": "Product service reads/writes to product database",
            "source": "product-service",
            "target": "product-db",
            "isEncrypted": true,
            "protocol": "TLS",
            "isPublicNetwork": false,
            "hasOpenThreats": false,
            "threats": []
          },
          {
            "id": "flow-9",
            "type": "tm.Flow",
            "name": "Event Publishing",
            "description": "Services publish events to message queue",
            "source": "user-service",
            "target": "message-queue",
            "isEncrypted": true,
            "protocol": "AMQP/TLS",
            "isPublicNetwork": false,
            "hasOpenThreats": false,
            "threats": []
          },
          {
            "id": "flow-10",
            "type": "tm.Flow",
            "name": "Event Subscription",
            "description": "Services consume events from message queue",
            "source": "message-queue",
            "target": "product-service",
            "isEncrypted": true,
            "protocol": "AMQP/TLS",
            "isPublicNetwork": false,
            "hasOpenThreats": false,
            "threats": []
          },
          {
            "id": "flow-11",
            "type": "tm.Flow",
            "name": "Payment Processing",
            "description": "Product service processes payments via external service",
            "source": "product-service",
            "target": "external-payment",
            "isEncrypted": true,
            "protocol": "HTTPS",
            "isPublicNetwork": true,
            "hasOpenThreats": false,
            "threats": []
          }
        ]
      }
    ]
  }
}
